// This code was generated by Hypar.
// Edits to this code will be overwritten the next time you run 'hypar init'.
// DO NOT EDIT THIS FILE.

using Elements;
using Elements.GeoJSON;
using Elements.Geometry;
using Hypar.Functions;
using Hypar.Functions.Execution;
using Hypar.Functions.Execution.AWS;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.Collections.Generic;

namespace ColumnsByFloors
{
    public class ColumnsByFloorsInputs: S3Args
    {
		/// <summary>
		/// Grid interval in the X direction.
		/// </summary>
		[JsonProperty("Grid X-Axis Interval")]
		public double GridXAxisInterval {get;}

		/// <summary>
		/// Grid interval in the Y direction.
		/// </summary>
		[JsonProperty("Grid Y-Axis Interval")]
		public double GridYAxisInterval {get;}

		/// <summary>
		/// Rotation of the grid in degrees.
		/// </summary>
		[JsonProperty("Grid Rotation")]
		public double GridRotation {get;}

		/// <summary>
		/// Diameter of the columns.
		/// </summary>
		[JsonProperty("Column Diameter")]
		public double ColumnDiameter {get;}



        /// <summary>
        /// Construct a ColumnsByFloorsInputs with default inputs.
        /// This should be used for testing only.
        /// </summary>
        public ColumnsByFloorsInputs() : base()
        {
			this.GridXAxisInterval = 10;
			this.GridYAxisInterval = 10;
			this.GridRotation = 90;
			this.ColumnDiameter = 2;

        }


        /// <summary>
        /// Construct a ColumnsByFloorsInputs specifying all inputs.
        /// </summary>
        /// <returns></returns>
        [JsonConstructor]
        public ColumnsByFloorsInputs(double gridXAxisInterval, double gridYAxisInterval, double gridRotation, double columnDiameter, string bucketName, string uploadsBucket, Dictionary<string, string> modelInputKeys, string gltfKey, string elementsKey, string ifcKey): base(bucketName, uploadsBucket, modelInputKeys, gltfKey, elementsKey, ifcKey)
        {
			this.GridXAxisInterval = gridXAxisInterval;
			this.GridYAxisInterval = gridYAxisInterval;
			this.GridRotation = gridRotation;
			this.ColumnDiameter = columnDiameter;

		}

		public override string ToString()
		{
			var json = JsonConvert.SerializeObject(this);
			return json;
		}
	}
}