
// This code was generated by Hypar.
// Edits to this code will be overwritten the next time you run 'hypar test generate'.
// DO NOT EDIT THIS FILE.

using Elements;
using Xunit;
using System.IO;
using System.Collections.Generic;
using Elements.Serialization.glTF;

namespace Structure
{
    public class StructureTest
    {
        [Fact]
        public void TestExecute()
        {
            var input = GetInput();

            var modelDependencies = new Dictionary<string, Model> { 
                {"Grids", Model.FromJson(File.ReadAllText(@"/Users/serenali/Github/hypar/BuildingBlocks/Structure/StructureByEnvelope/test/Generated/StructureTest/model_dependencies/Grids/model.json")) }, 
                {"Levels", Model.FromJson(File.ReadAllText(@"/Users/serenali/Github/hypar/BuildingBlocks/Structure/StructureByEnvelope/test/Generated/StructureTest/model_dependencies/Levels/model.json")) }, 
            };

            var result = Structure.Execute(modelDependencies, input);
            result.Model.ToGlTF("../../../Generated/StructureTest/results/StructureTest.gltf", false);
            result.Model.ToGlTF("../../../Generated/StructureTest/results/StructureTest.glb");
            File.WriteAllText("../../../Generated/StructureTest/results/StructureTest.json", result.Model.ToJson());
        }

        public StructureInputs GetInput()
        {
            var inputText = @"
            {
  ""Grid X-Axis Interval"": 3,
  ""Display Grid"": false,
  ""Column Type"": ""W18x76"",
  ""Grid Y-Axis Interval"": 3,
  ""Slab Edge Offset"": 0.5,
  ""Beam Type"": ""W12x14"",
  ""Slab Thickness"": 0.1254,
  ""Create Beams On First Level"": false,
  ""model_input_keys"": {
    ""Grids"": ""6a6b11fd-b767-4676-9250-fba8fd124c61_a66de204-7032-4e25-af82-ef387ef19765_elements.zip"",
    ""Levels"": ""4f9a402f-693d-4881-b653-c4d05b49d8fb_3bc5767f-173f-49e8-a645-b5faa750f32d_elements.zip""
  },
  ""Insert Columns At External Edges"": false,
  ""Girder Type"": ""W18x40"",
  ""Type of Construction"": ""Steel"",
  ""Beam Spacing"": 1.5
}
            ";
            return Newtonsoft.Json.JsonConvert.DeserializeObject<StructureInputs>(inputText);
        }
    }
}