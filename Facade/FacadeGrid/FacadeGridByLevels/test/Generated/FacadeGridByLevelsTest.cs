
// This code was generated by Hypar.
// Edits to this code will be overwritten the next time you run 'hypar test generate'.
// DO NOT EDIT THIS FILE.

using Elements;
using Xunit;
using System.IO;
using System.Collections.Generic;
using Elements.Serialization.glTF;

namespace FacadeGridByLevels
{
    public class FacadeGridByLevelsTest
    {
        [Fact]
        public void TestExecute()
        {
            var input = GetInput();

            var modelDependencies = new Dictionary<string, Model> { 
                {"Envelope", Model.FromJson(File.ReadAllText(@"/Users/andrewheumann/Dev/BuildingBlocks/Facade/FacadeGrid/FacadeGridByLevels/test/Generated/FacadeGridByLevelsTest/model_dependencies/Envelope/model.json")) }, 
                {"Levels", Model.FromJson(File.ReadAllText(@"/Users/andrewheumann/Dev/BuildingBlocks/Facade/FacadeGrid/FacadeGridByLevels/test/Generated/FacadeGridByLevelsTest/model_dependencies/Levels/model.json")) }, 
            };

            var result = FacadeGridByLevels.Execute(modelDependencies, input);
            result.Model.ToGlTF("../../../Generated/FacadeGridByLevelsTest/results/FacadeGridByLevelsTest.gltf", false);
            result.Model.ToGlTF("../../../Generated/FacadeGridByLevelsTest/results/FacadeGridByLevelsTest.glb");
            File.WriteAllText("../../../Generated/FacadeGridByLevelsTest/results/FacadeGridByLevelsTest.json", result.Model.ToJson());
        }

        public FacadeGridByLevelsInputs GetInput()
        {
            var inputText = @"
            {
  ""Offset From Facade"": 0,
  ""Remainder Position"": ""At Both Ends"",
  ""Target Facade Panel Width"": 3,
  ""Mode"": ""Fixed Width"",
  ""Display Mode"": ""Color By Type"",
  ""model_input_keys"": {
    ""Envelope"": ""10a98edc-0751-4ed9-beca-fc2f7577ef2c_6b2fa817-e74f-42af-abae-28b80745f699_elements.zip"",
    ""Levels"": ""7c530e33-0d2f-43ac-8ed2-1e5563f09217_3bc5767f-173f-49e8-a645-b5faa750f32d_elements.zip""
  },
  ""Fixed Width Settings"": {
    ""Height Shift"": 0,
    ""Panel Width"": 3
  },
  ""Pattern Settings"": {
    ""Panel Width Pattern"": [
      2,
      3
    ],
    ""Pattern Mode"": ""Cycle""
  }
}
            ";
            return Newtonsoft.Json.JsonConvert.DeserializeObject<FacadeGridByLevelsInputs>(inputText);
        }
    }
}